/*
This class aggregates Feature objects and settings related to PlaceFiles.

It also has the ability to write out a PlaceFile. At this time it cannot parse 
a PlaceFile.

This class does not handle all the features of a PlaceFile and is not intended
to be re-used.

Author: Ryan Leach

Revisions:
2015/10/15 - Initial version. RNL

*/
#pragma once
// std lib
#include <fstream>
#include <iostream>
#include <memory>
#include <map>
#include <vector>
// 3rd party libs
#include "ogrsf_frmts.h"
// PlaceFileBuilder headers
#include "Feature.h"
#include "OGRFeatureWrapper.h"

using std::map;
using std::ostream;
using std::string;
using std::vector;

namespace PFB
{
  class PlaceFile
  {
  public:
    using FP = std::unique_ptr<Feature>;

    /// Default Constructor.
    PlaceFile();

    /// Destructor
    ~PlaceFile();

    /// Save a file to disk.
    void saveFile(const string& path);

    /// Add a feature to this PlaceFile
    void addFeature(FP ft);

    /// Add a feature from an OGR geometry PolyAsString will convert the
    /// boundaries of a polygon to a line string. Polygons show up as a solid
    /// filled area with no transparency options yet, so this may be a preferable
    /// way to display them.
    ///
    /// Also supports adding many features if the supplied OGRGeometry is a
    /// multi-geometry. Each sub geometry in the multi-geometry will have the
    /// same label as the feature.
    void addOGRGeometry(const string& label, const PlaceFileColor& color, 
      OGRGeometry& ft, OGRCoordinateTransformation* trans = nullptr, 
      bool PolyAsString = false, int displayThresh = 999);

    /// Remove a feature from this PlaceFile
    void deleteFeature(const size_t key);

    /// Get the keys used to reference individual Features
    vector<size_t> getKeys();

    /// Set the viewing threshold for the PlaceFile.
    void setThreshold(const unsigned int t);

    /// Set the refresh minutes for the PlaceFile.
    void setRefreshMinutes(const unsigned int m);

    /// Get the viewing threshold.
    unsigned int getThreshold() const;

    /// Get the refresh time in minutes.
    unsigned int getRefreshMinutes() const;

    /// Get/Set the title
    void setTitle(const string& title);
    string getTitle() const;

    /// Get the number of features
    size_t getNumberOfFeatures()
    {
      return _features.size();
    }

    /// Enable writing this to an output stream.
    friend ostream& operator<<(ostream& ost, const PlaceFile& pf);

  private:
    map<size_t, FP> _features;
    size_t _nextKey = 0;
    unsigned int _threshold = 999;
    unsigned int _refreshMinutes = 2;
    string _title = "Generated by PlaceFileBuilder";
  };

  // Declare this in the PFB namespace.
  ostream& operator<<(ostream& ost, const PlaceFile& pf);
}
